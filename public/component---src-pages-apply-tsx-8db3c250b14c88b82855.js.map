{"version":3,"file":"component---src-pages-apply-tsx-8db3c250b14c88b82855.js","mappings":"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","sources":["webpack://vite_react_shadcn_ts/./src/pages/apply.tsx","webpack://vite_react_shadcn_ts/./src/services/AirtableService.ts","webpack://vite_react_shadcn_ts/./src/components/ClientOnly.tsx","webpack://vite_react_shadcn_ts/./src/components/ParticleBackground.tsx"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport AirtableService from '../services/AirtableService';\nimport ParticleBackground from '../components/ParticleBackground';\nimport { toast } from \"sonner\";\n\nconst Apply = () => {\n  const [formData, setFormData] = useState({\n    companyName: '',\n    founderName: '',\n    email: '',\n    website: '',\n    linkedIn: '',\n    stage: '',\n    industry: '',\n    description: '',\n    fundingTarget: '',\n    pitchDeck: null as File | null\n  });\n  \n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  \n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n  \n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      setFormData(prev => ({ ...prev, pitchDeck: e.target.files![0] }));\n    }\n  };\n  \n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Basic validation\n    if (!formData.companyName || !formData.email || !formData.description) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      const success = await AirtableService.submitApplication(formData);\n      \n      if (success) {\n        toast.success('Application submitted successfully!');\n        setSubmitted(true);\n        // Reset form\n        setFormData({\n          companyName: '',\n          founderName: '',\n          email: '',\n          website: '',\n          linkedIn: '',\n          stage: '',\n          industry: '',\n          description: '',\n          fundingTarget: '',\n          pitchDeck: null\n        });\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      toast.error('Failed to submit application. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <div className=\"min-h-screen pt-20 pb-16\">\n      <ParticleBackground />\n      \n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-3xl mx-auto\">\n          <div className=\"mb-12 text-center\">\n            <h1 className=\"text-4xl font-bold text-white mb-4\">Apply for Funding</h1>\n            <p className=\"text-srv-gray\">\n              We're looking for exceptional founders building innovative solutions. \n              Tell us about your startup and how we can help you grow.\n            </p>\n          </div>\n          \n          {submitted ? (\n            <div className=\"bg-gradient-to-br from-srv-dark to-srv-blue/90 rounded-lg shadow p-8 text-center\">\n              <div className=\"mb-6 text-srv-teal\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16 mx-auto\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n              </div>\n              <h2 className=\"text-2xl font-bold text-white mb-4\">Thank You for Your Application!</h2>\n              <p className=\"text-srv-gray mb-6\">\n                We've received your information and will review your application. \n                Our team will be in touch with you shortly.\n              </p>\n              <button\n                onClick={() => setSubmitted(false)}\n                className=\"bg-srv-teal hover:bg-srv-teal/80 text-white font-medium py-2 px-6 rounded-md transition-colors\"\n              >\n                Submit Another Application\n              </button>\n            </div>\n          ) : (\n            <div className=\"bg-gradient-to-br from-srv-dark to-srv-blue/90 rounded-lg shadow p-6 md:p-8\">\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                {/* Company Information */}\n                <div className=\"space-y-6\">\n                  <h2 className=\"text-xl font-semibold text-white\">Company Information</h2>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label htmlFor=\"companyName\" className=\"block text-srv-gray text-sm mb-2\">\n                        Company Name <span className=\"text-srv-teal\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        id=\"companyName\"\n                        name=\"companyName\"\n                        value={formData.companyName}\n                        onChange={handleChange}\n                        required\n                        className=\"w-full bg-srv-blue/10 border border-srv-blue/30 rounded-md px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-srv-teal\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label htmlFor=\"website\" className=\"block text-srv-gray text-sm mb-2\">\n                        Website\n                      </label>\n                      <input\n                        type=\"url\"\n                        id=\"website\"\n                        name=\"website\"\n                        value={formData.website}\n                        onChange={handleChange}\n                        className=\"w-full bg-srv-blue/10 border border-srv-blue/30 rounded-md px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-srv-teal\"\n                      />\n                    </div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label htmlFor=\"industry\" className=\"block text-srv-gray text-sm mb-2\">\n                        Industry <span className=\"text-srv-teal\">*</span>\n                      </label>\n                      <select\n                        id=\"industry\"\n                        name=\"industry\"\n                        value={formData.industry}\n                        onChange={handleChange}\n                        required\n                        className=\"w-full bg-srv-blue/10 border border-srv-blue/30 rounded-md px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-srv-teal\"\n                      >\n                        <option value=\"\">Select Industry</option>\n                        <option value=\"Artificial Intelligence\">Artificial Intelligence</option>\n                        <option value=\"HealthTech\">HealthTech</option>\n                        <option value=\"FinTech\">FinTech</option>\n                        <option value=\"Enterprise Software\">Enterprise Software</option>\n                        <option value=\"CleanTech\">CleanTech</option>\n                        <option value=\"DeepTech\">DeepTech</option>\n                        <option value=\"Other\">Other</option>\n                      </select>\n                    </div>\n                    \n                    <div>\n                      <label htmlFor=\"stage\" className=\"block text-srv-gray text-sm mb-2\">\n                        Stage <span className=\"text-srv-teal\">*</span>\n                      </label>\n                      <select\n                        id=\"stage\"\n                        name=\"stage\"\n                        value={formData.stage}\n                        onChange={handleChange}\n                        required\n                        className=\"w-full bg-srv-blue/10 border border-srv-blue/30 rounded-md px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-srv-teal\"\n                      >\n                        <option value=\"\">Select Stage</option>\n                        <option value=\"Pre-seed\">Pre-seed</option>\n                        <option value=\"Seed\">Seed</option>\n                        <option value=\"Series A\">Series A</option>\n                      </select>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <label htmlFor=\"description\" className=\"block text-srv-gray text-sm mb-2\">\n                      Company Description <span className=\"text-srv-teal\">*</span>\n                    </label>\n                    <textarea\n                      id=\"description\"\n                      name=\"description\"\n                      value={formData.description}\n                      onChange={handleChange}\n                      required\n                      rows={4}\n                      className=\"w-full bg-srv-blue/10 border border-srv-blue/30 rounded-md px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-srv-teal\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label htmlFor=\"fundingTarget\" className=\"block text-srv-gray text-sm mb-2\">\n                      Funding Target <span className=\"text-srv-teal\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"fundingTarget\"\n                      name=\"fundingTarget\"\n                      value={formData.fundingTarget}\n                      onChange={handleChange}\n                      required\n                      placeholder=\"e.g. £500,000\"\n                      className=\"w-full bg-srv-blue/10 border border-srv-blue/30 rounded-md px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-srv-teal\"\n                    />\n                  </div>\n                </div>\n                \n                {/* Founder Information */}\n                <div className=\"space-y-6 pt-4 border-t border-srv-blue/30\">\n                  <h2 className=\"text-xl font-semibold text-white\">Founder Information</h2>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label htmlFor=\"founderName\" className=\"block text-srv-gray text-sm mb-2\">\n                        Founder Name <span className=\"text-srv-teal\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        id=\"founderName\"\n                        name=\"founderName\"\n                        value={formData.founderName}\n                        onChange={handleChange}\n                        required\n                        className=\"w-full bg-srv-blue/10 border border-srv-blue/30 rounded-md px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-srv-teal\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label htmlFor=\"email\" className=\"block text-srv-gray text-sm mb-2\">\n                        Email <span className=\"text-srv-teal\">*</span>\n                      </label>\n                      <input\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        value={formData.email}\n                        onChange={handleChange}\n                        required\n                        className=\"w-full bg-srv-blue/10 border border-srv-blue/30 rounded-md px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-srv-teal\"\n                      />\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <label htmlFor=\"linkedIn\" className=\"block text-srv-gray text-sm mb-2\">\n                      LinkedIn Profile\n                    </label>\n                    <input\n                      type=\"url\"\n                      id=\"linkedIn\"\n                      name=\"linkedIn\"\n                      value={formData.linkedIn}\n                      onChange={handleChange}\n                      className=\"w-full bg-srv-blue/10 border border-srv-blue/30 rounded-md px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-srv-teal\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label htmlFor=\"pitchDeck\" className=\"block text-srv-gray text-sm mb-2\">\n                      Pitch Deck (PDF)\n                    </label>\n                    <input\n                      type=\"file\"\n                      id=\"pitchDeck\"\n                      name=\"pitchDeck\"\n                      accept=\".pdf\"\n                      onChange={handleFileChange}\n                      className=\"w-full bg-srv-blue/10 border border-srv-blue/30 rounded-md px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-srv-teal\"\n                    />\n                    <p className=\"text-srv-gray text-xs mt-1\">\n                      Max file size: 10MB. For security reasons, only PDF files are accepted.\n                    </p>\n                  </div>\n                </div>\n                \n                {/* Submit Button */}\n                <div className=\"pt-6 text-center md:text-right\">\n                  <button\n                    type=\"submit\"\n                    disabled={loading}\n                    className={`\n                      bg-srv-teal hover:bg-srv-teal/80 text-white font-medium py-3 px-8 rounded-md transition-colors\n                      ${loading ? 'opacity-70 cursor-not-allowed' : ''}\n                    `}\n                  >\n                    {loading ? 'Submitting...' : 'Submit Application'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Apply;\n","\nimport { toast } from \"sonner\";\n\n// Types for our portfolio companies\nexport interface PortfolioCompany {\n  id: string;\n  name: string;\n  description: string;\n  logo: string;\n  website: string;\n  industry: string[];\n  stage: string;\n  investmentDate: string;\n  announced: boolean;\n}\n\n// Types for our fund statistics\nexport interface FundStatistics {\n  totalInvestments: number;\n  totalCompanies: number;\n  averageInvestment: number;\n  industrySplit: Record<string, number>;\n  stageSplit: Record<string, number>;\n}\n\n// Mock data for demo purposes - this would be replaced with actual Airtable API calls\nconst mockPortfolioData: PortfolioCompany[] = [\n  {\n    id: '1',\n    name: 'TechFusion',\n    description: 'AI-powered data analytics platform for enterprise',\n    logo: 'https://placehold.co/200x200?text=TF',\n    website: 'https://example.com',\n    industry: ['Artificial Intelligence', 'Enterprise Software'],\n    stage: 'Series A',\n    investmentDate: '2023-06-15',\n    announced: true\n  },\n  {\n    id: '2',\n    name: 'GreenEnergy',\n    description: 'Renewable energy solutions for residential buildings',\n    logo: 'https://placehold.co/200x200?text=GE',\n    website: 'https://example.com',\n    industry: ['CleanTech', 'IoT'],\n    stage: 'Seed',\n    investmentDate: '2023-08-22',\n    announced: true\n  },\n  {\n    id: '3',\n    name: 'HealthAI',\n    description: 'AI diagnostics for healthcare providers',\n    logo: 'https://placehold.co/200x200?text=HA',\n    website: 'https://example.com',\n    industry: ['HealthTech', 'Artificial Intelligence'],\n    stage: 'Seed',\n    investmentDate: '2023-04-10',\n    announced: true\n  },\n  {\n    id: '4',\n    name: '',\n    description: '',\n    logo: '',\n    website: '',\n    industry: ['FinTech'],\n    stage: 'Pre-seed',\n    investmentDate: '2023-09-05',\n    announced: false\n  },\n  {\n    id: '5',\n    name: '',\n    description: '',\n    logo: '',\n    website: '',\n    industry: ['DeepTech', 'Manufacturing'],\n    stage: 'Seed',\n    investmentDate: '2023-10-30',\n    announced: false\n  }\n];\n\nconst mockFundStatistics: FundStatistics = {\n  totalInvestments: 5200000, // $5.2M\n  totalCompanies: 5,\n  averageInvestment: 1040000, // $1.04M\n  industrySplit: {\n    'Artificial Intelligence': 40,\n    'Enterprise Software': 20,\n    'CleanTech': 20,\n    'IoT': 10,\n    'HealthTech': 20,\n    'FinTech': 20,\n    'DeepTech': 10,\n    'Manufacturing': 10\n  },\n  stageSplit: {\n    'Pre-seed': 20,\n    'Seed': 60,\n    'Series A': 20\n  }\n};\n\nclass AirtableService {\n  // Fetch portfolio companies\n  async getPortfolioCompanies(): Promise<PortfolioCompany[]> {\n    try {\n      // In a real implementation, this would be an API call to Airtable\n      // For now, we'll return mock data with a simulated delay\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(mockPortfolioData);\n        }, 800);\n      });\n    } catch (error) {\n      console.error('Error fetching portfolio companies:', error);\n      toast.error('Failed to load portfolio data');\n      return [];\n    }\n  }\n\n  // Fetch fund statistics\n  async getFundStatistics(): Promise<FundStatistics> {\n    try {\n      // In a real implementation, this would be an API call to Airtable\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(mockFundStatistics);\n        }, 600);\n      });\n    } catch (error) {\n      console.error('Error fetching fund statistics:', error);\n      toast.error('Failed to load fund statistics');\n      return {\n        totalInvestments: 0,\n        totalCompanies: 0,\n        averageInvestment: 0,\n        industrySplit: {},\n        stageSplit: {}\n      };\n    }\n  }\n\n  // Submit application form\n  async submitApplication(formData: Record<string, any>): Promise<boolean> {\n    try {\n      // In a real implementation, this would post to Airtable API\n      console.log('Form submission data:', formData);\n      \n      // Simulate API call\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          if (Math.random() > 0.1) { // 90% success rate for demo\n            resolve(true);\n          } else {\n            throw new Error('Simulated API error');\n          }\n        }, 1000);\n      });\n    } catch (error) {\n      console.error('Error submitting application:', error);\n      toast.error('Failed to submit application. Please try again.');\n      return false;\n    }\n  }\n}\n\nexport default new AirtableService();\n","import React, { useEffect, useState } from 'react';\n\ninterface ClientOnlyProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\n/**\n * ClientOnly component - only renders its children on the client side\n * Use this to wrap components that rely on browser APIs\n */\nconst ClientOnly: React.FC<ClientOnlyProps> = ({ children, fallback = null }) => {\n  const [hasMounted, setHasMounted] = useState(false);\n\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  if (!hasMounted) {\n    return <>{fallback}</>;\n  }\n\n  return <>{children}</>;\n};\n\nexport default ClientOnly; ","import React, { useEffect, useRef } from 'react';\nimport ClientOnly from './ClientOnly';\n\ninterface Particle {\n  x: number;\n  y: number;\n  size: number;\n  speedX: number;\n  speedY: number;\n  color: string;\n  opacity: number;\n}\n\n// The actual particle background implementation\nconst ParticleBackgroundContent = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  \n  useEffect(() => {\n    // Check if we're in a browser environment\n    const isBrowser = typeof window !== 'undefined';\n    if (!isBrowser) return;\n    \n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    \n    let animationFrameId: number;\n    let particles: Particle[] = [];\n    \n    // Set canvas size\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      \n      // Reset particles when resizing\n      initParticles();\n    };\n    \n    // Initialize particles\n    const initParticles = () => {\n      particles = [];\n      const particleCount = Math.min(window.innerWidth / 10, 120);\n      \n      for (let i = 0; i < particleCount; i++) {\n        particles.push({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height,\n          size: Math.random() * 3 + 0.1, // Smaller particles for more subtle effect\n          speedX: (Math.random() - 0.5) * 0.9,\n          speedY: (Math.random() - 0.5) * 0.9,\n          color: '#ffffff',\n          opacity: Math.random() * 0.5 + 0.1\n        });\n      }\n    };\n    \n    // Draw particles\n    const drawParticles = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Update and draw each particle\n      particles.forEach((particle, i) => {\n        // Update position\n        particle.x += particle.speedX;\n        particle.y += particle.speedY;\n        \n        // Check boundaries and reverse direction if needed\n        if (particle.x < 0 || particle.x > canvas.width) {\n          particle.speedX *= -1;\n        }\n        \n        if (particle.y < 0 || particle.y > canvas.height) {\n          particle.speedY *= -1;\n        }\n        \n        // Draw the particle\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(255, 255, 255, ${particle.opacity})`;\n        ctx.fill();\n        \n        // Connect nearby particles with lines\n        connectParticles(particle, i);\n      });\n    };\n    \n    // Connect particles with lines if they're close enough\n    const connectParticles = (particle: Particle, index: number) => {\n      for (let j = index + 1; j < particles.length; j++) {\n        const otherParticle = particles[j];\n        const distance = Math.sqrt(\n          Math.pow(particle.x - otherParticle.x, 2) +\n          Math.pow(particle.y - otherParticle.y, 2)\n        );\n        \n        if (distance < 130) {\n          ctx.beginPath();\n          ctx.strokeStyle = `rgba(167, 167, 167, ${0.4 * (1 - distance / 130)})`;\n          ctx.lineWidth = 1;\n          ctx.moveTo(particle.x, particle.y);\n          ctx.lineTo(otherParticle.x, otherParticle.y);\n          ctx.stroke();\n        }\n      }\n    };\n    \n    // Animation loop\n    const animate = () => {\n      drawParticles();\n      animationFrameId = requestAnimationFrame(animate);\n    };\n    \n    // Initialize and start the animation\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    animate();\n    \n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n  \n  return (\n    <div className=\"particles-container\">\n      <canvas \n        ref={canvasRef}\n        className=\"absolute inset-0\"\n        style={{ \n          opacity: 0.8,\n          zIndex: 1\n        }}\n      />\n    </div>\n  );\n};\n\n// Main component that uses ClientOnly to prevent SSR issues\nconst ParticleBackground = () => {\n  return (\n    <ClientOnly fallback={<div className=\"particles-container\" />}>\n      <ParticleBackgroundContent />\n    </ClientOnly>\n  );\n};\n\nexport default ParticleBackground;\n"],"names":["Apply","formData","setFormData","useState","companyName","founderName","email","website","linkedIn","stage","industry","description","fundingTarget","pitchDeck","loading","setLoading","submitted","setSubmitted","handleChange","e","name","value","target","prev","___EmotionJSX","className","ParticleBackground","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","onSubmit","async","preventDefault","AirtableService","submitApplication","toast","success","error","console","htmlFor","type","id","onChange","required","rows","placeholder","accept","files","disabled","mockPortfolioData","logo","investmentDate","announced","mockFundStatistics","totalInvestments","totalCompanies","averageInvestment","industrySplit","stageSplit","_proto","prototype","getPortfolioCompanies","Promise","resolve","setTimeout","getFundStatistics","log","Math","random","Error","_ref","children","fallback","hasMounted","setHasMounted","useEffect","React","ParticleBackgroundContent","canvasRef","useRef","window","canvas","current","ctx","getContext","animationFrameId","particles","handleResize","width","innerWidth","height","innerHeight","initParticles","particleCount","min","i","push","x","y","size","speedX","speedY","color","opacity","connectParticles","particle","index","j","length","otherParticle","distance","sqrt","pow","beginPath","strokeStyle","lineWidth","moveTo","lineTo","animate","clearRect","forEach","arc","PI","fillStyle","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","ref","style","zIndex","ClientOnly"],"sourceRoot":""}