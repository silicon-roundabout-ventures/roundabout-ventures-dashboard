{"version":3,"file":"component---src-pages-community-tsx-ec27cb7703247565cc9e.js","mappings":"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","sources":["webpack://vite_react_shadcn_ts/./src/pages/community.tsx","webpack://vite_react_shadcn_ts/./src/components/ClientOnly.tsx","webpack://vite_react_shadcn_ts/./src/components/ParticleBackground.tsx"],"sourcesContent":["\nimport React from 'react';\nimport ParticleBackground from '../components/ParticleBackground';\n\nconst Community = () => {\n  return (\n    <div className=\"min-h-screen pt-20 pb-16\">\n      <ParticleBackground />\n      \n      <div className=\"container mx-auto px-4 z-10 relative\">\n        <div className=\"mb-12 text-center\">\n          <h1 className=\"text-4xl font-bold text-white mb-4\">Community</h1>\n          <p className=\"text-lg text-srv-gray max-w-2xl mx-auto\">\n            Join our vibrant community of founders, engineers, and investors passionate about deep tech and innovation.\n          </p>\n        </div>\n        \n        <div className=\"max-w-5xl mx-auto\">\n          <div className=\"bg-srv-dark/70 backdrop-blur-sm p-8 rounded-lg mb-12\">\n            <h2 className=\"text-2xl font-bold text-white mb-6\">&lt;Upcoming Events/&gt;</h2>\n            <p className=\"text-white mb-6\">Connect with like-minded innovators and industry leaders at our upcoming events.</p>\n            \n            <div className=\"h-[600px] overflow-hidden rounded-lg\">\n              {/* Embed lu.ma events here */}\n              <iframe \n                src=\"https://lu.ma/embed-checkout/evt-IDeEvnIYsqkgKkL\" \n                width=\"100%\" \n                height=\"100%\" \n                frameBorder=\"0\" \n                style={{ borderRadius: '8px', border: 'none' }}\n                allowFullScreen\n                title=\"Silicon Roundabout Events\"\n              ></iframe>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Community;\n","import React, { useEffect, useState } from 'react';\n\ninterface ClientOnlyProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\n/**\n * ClientOnly component - only renders its children on the client side\n * Use this to wrap components that rely on browser APIs\n */\nconst ClientOnly: React.FC<ClientOnlyProps> = ({ children, fallback = null }) => {\n  const [hasMounted, setHasMounted] = useState(false);\n\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  if (!hasMounted) {\n    return <>{fallback}</>;\n  }\n\n  return <>{children}</>;\n};\n\nexport default ClientOnly; ","import React, { useEffect, useRef } from 'react';\nimport ClientOnly from './ClientOnly';\n\ninterface Particle {\n  x: number;\n  y: number;\n  size: number;\n  speedX: number;\n  speedY: number;\n  color: string;\n  opacity: number;\n}\n\n// The actual particle background implementation\nconst ParticleBackgroundContent = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  \n  useEffect(() => {\n    // Check if we're in a browser environment\n    const isBrowser = typeof window !== 'undefined';\n    if (!isBrowser) return;\n    \n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    \n    let animationFrameId: number;\n    let particles: Particle[] = [];\n    \n    // Set canvas size\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      \n      // Reset particles when resizing\n      initParticles();\n    };\n    \n    // Initialize particles\n    const initParticles = () => {\n      particles = [];\n      const particleCount = Math.min(window.innerWidth / 10, 120);\n      \n      for (let i = 0; i < particleCount; i++) {\n        particles.push({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height,\n          size: Math.random() * 3 + 0.1, // Smaller particles for more subtle effect\n          speedX: (Math.random() - 0.5) * 0.9,\n          speedY: (Math.random() - 0.5) * 0.9,\n          color: '#ffffff',\n          opacity: Math.random() * 0.5 + 0.1\n        });\n      }\n    };\n    \n    // Draw particles\n    const drawParticles = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Update and draw each particle\n      particles.forEach((particle, i) => {\n        // Update position\n        particle.x += particle.speedX;\n        particle.y += particle.speedY;\n        \n        // Check boundaries and reverse direction if needed\n        if (particle.x < 0 || particle.x > canvas.width) {\n          particle.speedX *= -1;\n        }\n        \n        if (particle.y < 0 || particle.y > canvas.height) {\n          particle.speedY *= -1;\n        }\n        \n        // Draw the particle\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(255, 255, 255, ${particle.opacity})`;\n        ctx.fill();\n        \n        // Connect nearby particles with lines\n        connectParticles(particle, i);\n      });\n    };\n    \n    // Connect particles with lines if they're close enough\n    const connectParticles = (particle: Particle, index: number) => {\n      for (let j = index + 1; j < particles.length; j++) {\n        const otherParticle = particles[j];\n        const distance = Math.sqrt(\n          Math.pow(particle.x - otherParticle.x, 2) +\n          Math.pow(particle.y - otherParticle.y, 2)\n        );\n        \n        if (distance < 130) {\n          ctx.beginPath();\n          ctx.strokeStyle = `rgba(167, 167, 167, ${0.4 * (1 - distance / 130)})`;\n          ctx.lineWidth = 1;\n          ctx.moveTo(particle.x, particle.y);\n          ctx.lineTo(otherParticle.x, otherParticle.y);\n          ctx.stroke();\n        }\n      }\n    };\n    \n    // Animation loop\n    const animate = () => {\n      drawParticles();\n      animationFrameId = requestAnimationFrame(animate);\n    };\n    \n    // Initialize and start the animation\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    animate();\n    \n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n  \n  return (\n    <div className=\"particles-container\">\n      <canvas \n        ref={canvasRef}\n        className=\"absolute inset-0\"\n        style={{ \n          opacity: 0.8,\n          zIndex: 1\n        }}\n      />\n    </div>\n  );\n};\n\n// Main component that uses ClientOnly to prevent SSR issues\nconst ParticleBackground = () => {\n  return (\n    <ClientOnly fallback={<div className=\"particles-container\" />}>\n      <ParticleBackgroundContent />\n    </ClientOnly>\n  );\n};\n\nexport default ParticleBackground;\n"],"names":["Community","___EmotionJSX","className","ParticleBackground","src","width","height","frameBorder","style","borderRadius","border","allowFullScreen","title","_ref","children","fallback","hasMounted","setHasMounted","useState","useEffect","React","ParticleBackgroundContent","canvasRef","useRef","window","canvas","current","ctx","getContext","animationFrameId","particles","handleResize","innerWidth","innerHeight","initParticles","particleCount","Math","min","i","push","x","random","y","size","speedX","speedY","color","opacity","connectParticles","particle","index","j","length","otherParticle","distance","sqrt","pow","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","animate","clearRect","forEach","arc","PI","fillStyle","fill","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","ref","zIndex","ClientOnly"],"sourceRoot":""}