{"version":3,"file":"component---src-pages-contact-tsx-47b4068576ab6a2801e0.js","mappings":"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","sources":["webpack://vite_react_shadcn_ts/./src/pages/contact.tsx","webpack://vite_react_shadcn_ts/./src/components/ClientOnly.tsx","webpack://vite_react_shadcn_ts/./src/components/ParticleBackground.tsx"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport ParticleBackground from '../components/ParticleBackground';\nimport { toast } from \"sonner\";\n\nconst Contact = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n  \n  const [loading, setLoading] = useState(false);\n  \n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n  \n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Basic validation\n    if (!formData.name || !formData.email || !formData.message) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      \n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      toast.success('Message sent successfully!');\n      \n      // Reset form\n      setFormData({\n        name: '',\n        email: '',\n        subject: '',\n        message: ''\n      });\n    } catch (error) {\n      console.error('Error sending message:', error);\n      toast.error('Failed to send message. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <div className=\"min-h-screen pt-20 pb-16\">\n      <ParticleBackground />\n      \n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"mb-12 text-center\">\n            <h1 className=\"text-4xl font-bold text-white mb-4\">Contact Us</h1>\n            <p className=\"text-srv-gray\">\n              Have a question or want to learn more about Silicon Roundabout Ventures? Get in touch with us.\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-12\">\n            <div className=\"bg-gradient-to-br from-srv-dark to-srv-blue/90 rounded-lg shadow p-6 text-center\">\n              <div className=\"text-4xl text-srv-teal mb-4\">‚úâÔ∏è</div>\n              <h3 className=\"text-xl font-bold text-white mb-2\">Email</h3>\n              <a href=\"mailto:info@siliconroundabout.ventures\" className=\"text-srv-gray hover:text-srv-teal transition-colors\">\n                info@siliconroundabout.ventures\n              </a>\n            </div>\n            \n            <div className=\"bg-gradient-to-br from-srv-dark to-srv-blue/90 rounded-lg shadow p-6 text-center\">\n              <div className=\"text-4xl text-srv-teal mb-4\">üè¢</div>\n              <h3 className=\"text-xl font-bold text-white mb-2\">Location</h3>\n              <p className=\"text-srv-gray\">\n                London, United Kingdom\n              </p>\n            </div>\n            \n            <div className=\"bg-gradient-to-br from-srv-dark to-srv-blue/90 rounded-lg shadow p-6 text-center\">\n              <div className=\"text-4xl text-srv-teal mb-4\">üåê</div>\n              <h3 className=\"text-xl font-bold text-white mb-2\">Social</h3>\n              <div className=\"flex justify-center space-x-4\">\n                <a href=\"https://twitter.com/siliconroundabt\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-srv-gray hover:text-srv-teal transition-colors\">\n                  Twitter\n                </a>\n                <a href=\"https://www.linkedin.com/company/siliconroundabout/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-srv-gray hover:text-srv-teal transition-colors\">\n                  LinkedIn\n                </a>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-gradient-to-br from-srv-dark to-srv-blue/90 rounded-lg shadow p-8\">\n            <h2 className=\"text-2xl font-bold text-white mb-6\">Send Us a Message</h2>\n            \n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label htmlFor=\"name\" className=\"block text-srv-gray text-sm mb-2\">\n                    Name <span className=\"text-srv-teal\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleChange}\n                    required\n                    className=\"w-full bg-srv-blue/10 border border-srv-blue/30 rounded-md px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-srv-teal\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"email\" className=\"block text-srv-gray text-sm mb-2\">\n                    Email <span className=\"text-srv-teal\">*</span>\n                  </label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    required\n                    className=\"w-full bg-srv-blue/10 border border-srv-blue/30 rounded-md px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-srv-teal\"\n                  />\n                </div>\n              </div>\n              \n              <div>\n                <label htmlFor=\"subject\" className=\"block text-srv-gray text-sm mb-2\">\n                  Subject\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={formData.subject}\n                  onChange={handleChange}\n                  className=\"w-full bg-srv-blue/10 border border-srv-blue/30 rounded-md px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-srv-teal\"\n                />\n              </div>\n              \n              <div>\n                <label htmlFor=\"message\" className=\"block text-srv-gray text-sm mb-2\">\n                  Message <span className=\"text-srv-teal\">*</span>\n                </label>\n                <textarea\n                  id=\"message\"\n                  name=\"message\"\n                  value={formData.message}\n                  onChange={handleChange}\n                  required\n                  rows={6}\n                  className=\"w-full bg-srv-blue/10 border border-srv-blue/30 rounded-md px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-srv-teal\"\n                />\n              </div>\n              \n              <div className=\"text-right\">\n                <button\n                  type=\"submit\"\n                  disabled={loading}\n                  className={`\n                    bg-srv-teal hover:bg-srv-teal/80 text-white font-medium py-3 px-8 rounded-md transition-colors\n                    ${loading ? 'opacity-70 cursor-not-allowed' : ''}\n                  `}\n                >\n                  {loading ? 'Sending...' : 'Send Message'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React, { useEffect, useState } from 'react';\n\ninterface ClientOnlyProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\n/**\n * ClientOnly component - only renders its children on the client side\n * Use this to wrap components that rely on browser APIs\n */\nconst ClientOnly: React.FC<ClientOnlyProps> = ({ children, fallback = null }) => {\n  const [hasMounted, setHasMounted] = useState(false);\n\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  if (!hasMounted) {\n    return <>{fallback}</>;\n  }\n\n  return <>{children}</>;\n};\n\nexport default ClientOnly; ","import React, { useEffect, useRef } from 'react';\nimport ClientOnly from './ClientOnly';\n\ninterface Particle {\n  x: number;\n  y: number;\n  size: number;\n  speedX: number;\n  speedY: number;\n  color: string;\n  opacity: number;\n}\n\n// The actual particle background implementation\nconst ParticleBackgroundContent = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  \n  useEffect(() => {\n    // Check if we're in a browser environment\n    const isBrowser = typeof window !== 'undefined';\n    if (!isBrowser) return;\n    \n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    \n    let animationFrameId: number;\n    let particles: Particle[] = [];\n    \n    // Set canvas size\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      \n      // Reset particles when resizing\n      initParticles();\n    };\n    \n    // Initialize particles\n    const initParticles = () => {\n      particles = [];\n      const particleCount = Math.min(window.innerWidth / 10, 120);\n      \n      for (let i = 0; i < particleCount; i++) {\n        particles.push({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height,\n          size: Math.random() * 3 + 0.1, // Smaller particles for more subtle effect\n          speedX: (Math.random() - 0.5) * 0.9,\n          speedY: (Math.random() - 0.5) * 0.9,\n          color: '#ffffff',\n          opacity: Math.random() * 0.5 + 0.1\n        });\n      }\n    };\n    \n    // Draw particles\n    const drawParticles = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Update and draw each particle\n      particles.forEach((particle, i) => {\n        // Update position\n        particle.x += particle.speedX;\n        particle.y += particle.speedY;\n        \n        // Check boundaries and reverse direction if needed\n        if (particle.x < 0 || particle.x > canvas.width) {\n          particle.speedX *= -1;\n        }\n        \n        if (particle.y < 0 || particle.y > canvas.height) {\n          particle.speedY *= -1;\n        }\n        \n        // Draw the particle\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(255, 255, 255, ${particle.opacity})`;\n        ctx.fill();\n        \n        // Connect nearby particles with lines\n        connectParticles(particle, i);\n      });\n    };\n    \n    // Connect particles with lines if they're close enough\n    const connectParticles = (particle: Particle, index: number) => {\n      for (let j = index + 1; j < particles.length; j++) {\n        const otherParticle = particles[j];\n        const distance = Math.sqrt(\n          Math.pow(particle.x - otherParticle.x, 2) +\n          Math.pow(particle.y - otherParticle.y, 2)\n        );\n        \n        if (distance < 130) {\n          ctx.beginPath();\n          ctx.strokeStyle = `rgba(167, 167, 167, ${0.4 * (1 - distance / 130)})`;\n          ctx.lineWidth = 1;\n          ctx.moveTo(particle.x, particle.y);\n          ctx.lineTo(otherParticle.x, otherParticle.y);\n          ctx.stroke();\n        }\n      }\n    };\n    \n    // Animation loop\n    const animate = () => {\n      drawParticles();\n      animationFrameId = requestAnimationFrame(animate);\n    };\n    \n    // Initialize and start the animation\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    animate();\n    \n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n  \n  return (\n    <div className=\"particles-container\">\n      <canvas \n        ref={canvasRef}\n        className=\"absolute inset-0\"\n        style={{ \n          opacity: 0.8,\n          zIndex: 1\n        }}\n      />\n    </div>\n  );\n};\n\n// Main component that uses ClientOnly to prevent SSR issues\nconst ParticleBackground = () => {\n  return (\n    <ClientOnly fallback={<div className=\"particles-container\" />}>\n      <ParticleBackgroundContent />\n    </ClientOnly>\n  );\n};\n\nexport default ParticleBackground;\n"],"names":["Contact","formData","setFormData","useState","name","email","subject","message","loading","setLoading","handleChange","e","value","target","prev","___EmotionJSX","className","ParticleBackground","href","rel","onSubmit","async","preventDefault","Promise","resolve","setTimeout","toast","success","error","console","htmlFor","type","id","onChange","required","rows","disabled","_ref","children","fallback","hasMounted","setHasMounted","useEffect","React","ParticleBackgroundContent","canvasRef","useRef","window","canvas","current","ctx","getContext","animationFrameId","particles","handleResize","width","innerWidth","height","innerHeight","initParticles","particleCount","Math","min","i","push","x","random","y","size","speedX","speedY","color","opacity","connectParticles","particle","index","j","length","otherParticle","distance","sqrt","pow","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","animate","clearRect","forEach","arc","PI","fillStyle","fill","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","ref","style","zIndex","ClientOnly"],"sourceRoot":""}